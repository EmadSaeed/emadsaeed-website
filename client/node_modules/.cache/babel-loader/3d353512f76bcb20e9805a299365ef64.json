{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Utils_2 = require(\"../Utils\");\n\nvar Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas, generatedCanvas) {\n      var _a;\n\n      if (!canvas.className) {\n        canvas.className = Utils_1.Constants.canvasClass;\n      }\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this.context = this.element.getContext(\"2d\");\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.draw(function (ctx) {\n        (0, Utils_2.clear)(ctx, _this.size);\n      });\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover && _this2.coverColor) {\n          (0, Utils_2.clear)(ctx, _this2.size);\n\n          _this2.paintBase((0, Utils_1.getStyleFromRgb)(_this2.coverColor, _this2.coverColor.a));\n        } else {\n          _this2.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n\n      var options = this.container.actualOptions;\n      var trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase((0, Utils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          (0, Utils_2.clear)(ctx, _this3.size);\n        });\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function windowResize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container;\n      this.resize();\n      var needsRefresh = container.updateActualOptions();\n      container.particles.setDensity();\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (plugin.resize !== undefined) {\n            plugin.resize();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (needsRefresh) {\n        container.refresh();\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container;\n      var pxRatio = container.retina.pixelRatio;\n      var size = container.canvas.size;\n      var oldSize = {\n        width: size.width,\n        height: size.height\n      };\n      size.width = this.element.offsetWidth * pxRatio;\n      size.height = this.element.offsetHeight * pxRatio;\n      this.element.width = size.width;\n      this.element.height = size.height;\n\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(p1, p2) {\n      var _this4 = this;\n\n      this.draw(function (ctx) {\n        var _a;\n\n        var lineStyle = _this4.lineStyle(p1, p2);\n\n        if (!lineStyle) {\n          return;\n        }\n\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        (0, Utils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : _this4.container.retina.linksWidth, lineStyle, pos1, pos2);\n      });\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(particle, lineColor, opacity, mousePos) {\n      var container = this.container;\n      this.draw(function (ctx) {\n        var _a;\n\n        var beginPos = particle.getPosition();\n        (0, Utils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n      });\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this5 = this;\n\n      var _a, _b, _c, _d, _e, _f;\n\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor();\n      var psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n      if (!pfColor && !psColor) {\n        return;\n      }\n\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n          _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n          fColor = _this$getPluginPartic2[0],\n          sColor = _this$getPluginPartic2[1];\n\n      var pOptions = particle.options;\n      var twinkle = pOptions.twinkle.particles;\n      var twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n\n      if (!fColor || !sColor) {\n        var twinkleRgb = (0, Utils_1.colorToHsl)(twinkle.color);\n\n        if (!fColor) {\n          fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n        }\n\n        if (!sColor) {\n          sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n        }\n      }\n\n      var options = this.container.actualOptions;\n      var zIndexOptions = particle.options.zIndex;\n      var zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate);\n      var radius = particle.getRadius();\n      var opacity = twinkling ? twinkle.opacity : (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n      var strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity;\n      var zOpacity = opacity * zOpacityFactor;\n      var fillColorValue = fColor ? (0, Utils_1.getStyleFromHsl)(fColor, zOpacity) : undefined;\n\n      if (!fillColorValue && !sColor) {\n        return;\n      }\n\n      this.draw(function (ctx) {\n        var zSizeFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate);\n        var zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        var strokeColorValue = sColor ? (0, Utils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : fillColorValue;\n\n        if (radius <= 0) {\n          return;\n        }\n\n        var container = _this5.container;\n\n        var _iterator2 = _createForOfIteratorHelper(container.particles.updaters),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var updater = _step2.value;\n\n            if (updater.beforeDraw) {\n              updater.beforeDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        (0, Utils_1.drawParticle)(_this5.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, particle.gradient);\n\n        var _iterator3 = _createForOfIteratorHelper(container.particles.updaters),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _updater = _step3.value;\n\n            if (_updater.afterDraw) {\n              _updater.afterDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        (0, Utils_1.drawPlugin)(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        (0, Utils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions;\n      var background = options.background;\n      var element = this.element;\n      var elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = (0, Utils_1.colorToRgb)(background.color);\n        elementStyle.backgroundColor = color ? (0, Utils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this.context) {\n        return;\n      }\n\n      return cb(this.context);\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions;\n      var cover = options.backgroundMask.cover;\n      var color = cover.color;\n      var coverRgb = (0, Utils_1.colorToRgb)(color);\n\n      if (coverRgb) {\n        this.coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions;\n      var trail = options.particles.move.trail;\n      var fillColor = (0, Utils_1.colorToRgb)(trail.fillColor);\n\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor;\n      var sColor;\n\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (!fColor && plugin.particleFillColor) {\n            fColor = (0, Utils_1.colorToHsl)(plugin.particleFillColor(particle));\n          }\n\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = (0, Utils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n          }\n\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n          options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      var originalStyle = this.originalStyle;\n\n      if (options.fullScreen.enable) {\n        this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n        element.style.position = \"fixed\";\n        element.style.zIndex = options.fullScreen.zIndex.toString(10);\n        element.style.top = \"0\";\n        element.style.left = \"0\";\n        element.style.width = \"100%\";\n        element.style.height = \"100%\";\n      } else if (originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this6 = this;\n\n      this.draw(function (ctx) {\n        (0, Utils_1.paintBase)(ctx, _this6.size, baseColor);\n      });\n    }\n  }, {\n    key: \"lineStyle\",\n    value: function lineStyle(p1, p2) {\n      var _this7 = this;\n\n      return this.draw(function (ctx) {\n        var options = _this7.container.actualOptions;\n        var connectOptions = options.interactivity.modes.connect;\n        return (0, Utils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n      });\n    }\n  }]);\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/tsparticles/Core/Canvas.js"],"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","Utils_2","container","size","height","width","context","generatedCanvas","resize","initStyle","initCover","initTrail","initBackground","paint","canvas","_a","className","Constants","canvasClass","element","remove","originalStyle","deepExtend","style","offsetHeight","offsetWidth","getContext","retina","init","draw","ctx","clear","options","actualOptions","backgroundMask","enable","cover","coverColor","paintBase","getStyleFromRgb","a","trail","particles","move","length","trailFillColor","needsRefresh","updateActualOptions","setDensity","plugins","plugin","undefined","refresh","pxRatio","pixelRatio","oldSize","started","resizeFactor","p1","p2","lineStyle","pos1","getPosition","pos2","drawConnectLine","linksWidth","particle","lineColor","opacity","mousePos","beginPos","drawGrabLine","delta","_b","_c","_d","_e","_f","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","pOptions","twinkle","twinkling","Math","random","frequency","twinkleRgb","colorToHsl","color","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","radius","getRadius","bubble","strokeOpacity","stroke","zOpacity","fillColorValue","getStyleFromHsl","zSizeFactor","sizeRate","zStrokeOpacity","strokeColorValue","updaters","updater","beforeDraw","drawParticle","composite","shadow","gradient","afterDraw","drawPlugin","drawParticlePlugin","background","elementStyle","colorToRgb","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","r","g","b","fillColor","particleFillColor","particleStrokeColor","fullScreen","toString","top","left","baseColor","connectOptions","interactivity","modes","connect","links"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Utils_2 = require(\"../Utils\");\nclass Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = (0, Utils_1.deepExtend)({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            (0, Utils_2.clear)(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                (0, Utils_2.clear)(ctx, this.size);\n                this.paintBase((0, Utils_1.getStyleFromRgb)(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase((0, Utils_1.getStyleFromRgb)(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                (0, Utils_2.clear)(ctx, this.size);\n            });\n        }\n    }\n    windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        const needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            (0, Utils_1.drawConnectLine)(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            (0, Utils_1.drawGrabLine)(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = (0, Utils_1.colorToHsl)(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? (0, Utils_1.getStyleFromHsl)(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? (0, Utils_1.getStyleFromHsl)(sColor, zStrokeOpacity) : fillColorValue;\n            if (radius <= 0) {\n                return;\n            }\n            const container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n            }\n            (0, Utils_1.drawParticle)(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, particle.gradient);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            (0, Utils_1.drawPlugin)(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            (0, Utils_1.drawParticlePlugin)(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = (0, Utils_1.colorToRgb)(background.color);\n            elementStyle.backgroundColor = color ? (0, Utils_1.getStyleFromRgb)(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = (0, Utils_1.colorToRgb)(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = (0, Utils_1.colorToRgb)(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = (0, Utils_1.colorToHsl)(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = (0, Utils_1.colorToHsl)(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = (0, Utils_1.deepExtend)({}, element.style);\n            element.style.position = \"fixed\";\n            element.style.zIndex = options.fullScreen.zIndex.toString(10);\n            element.style.top = \"0\";\n            element.style.left = \"0\";\n            element.style.width = \"100%\";\n            element.style.height = \"100%\";\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            (0, Utils_1.paintBase)(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return (0, Utils_1.gradient)(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}