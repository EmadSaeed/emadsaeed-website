{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _createForOfIteratorHelper = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _asyncToGenerator = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextDrawer = exports.validTypes = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nexports.validTypes = [\"text\", \"character\", \"char\"];\n\nvar TextDrawer = /*#__PURE__*/function () {\n  function TextDrawer() {\n    _classCallCheck(this, TextDrawer);\n  }\n\n  _createClass(TextDrawer, [{\n    key: \"getSidesCount\",\n    value: function getSidesCount() {\n      return 12;\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(container) {\n        var options, shapeOptions, promises, _iterator, _step, character;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = container.actualOptions;\n\n                if (!exports.validTypes.find(function (t) {\n                  return (0, Utils_1.isInArray)(t, options.particles.shape.type);\n                })) {\n                  _context.next = 14;\n                  break;\n                }\n\n                shapeOptions = exports.validTypes.map(function (t) {\n                  return options.particles.shape.options[t];\n                }).find(function (t) {\n                  return !!t;\n                });\n\n                if (!(shapeOptions instanceof Array)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                promises = [];\n                _iterator = _createForOfIteratorHelper(shapeOptions);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    character = _step.value;\n                    promises.push((0, Utils_1.loadFont)(character));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                _context.next = 9;\n                return Promise.allSettled(promises);\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                if (!(shapeOptions !== undefined)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 14;\n                return (0, Utils_1.loadFont)(shapeOptions);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius, opacity) {\n      var _a, _b, _c;\n\n      var character = particle.shapeData;\n\n      if (character === undefined) {\n        return;\n      }\n\n      var textData = character.value;\n\n      if (textData === undefined) {\n        return;\n      }\n\n      var textParticle = particle;\n\n      if (textParticle.text === undefined) {\n        textParticle.text = textData instanceof Array ? (0, Utils_1.itemFromArray)(textData, particle.randomIndexData) : textData;\n      }\n\n      var text = textParticle.text;\n      var style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n      var weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n      var size = Math.round(radius) * 2;\n      var font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n      var fill = particle.fill;\n      var offsetX = text.length * radius / 2;\n      context.font = \"\".concat(style, \" \").concat(weight, \" \").concat(size, \"px \\\"\").concat(font, \"\\\"\");\n      var pos = {\n        x: -offsetX,\n        y: radius / 2\n      };\n      context.globalAlpha = opacity;\n\n      if (fill) {\n        context.fillText(text, pos.x, pos.y);\n      } else {\n        context.strokeText(text, pos.x, pos.y);\n      }\n\n      context.globalAlpha = 1;\n    }\n  }]);\n\n  return TextDrawer;\n}();\n\nexports.TextDrawer = TextDrawer;","map":{"version":3,"sources":["/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/tsparticles/Shapes/Text/TextDrawer.js"],"names":["Object","defineProperty","exports","value","TextDrawer","validTypes","Utils_1","require","container","options","actualOptions","find","t","isInArray","particles","shape","type","shapeOptions","map","Array","promises","character","push","loadFont","Promise","allSettled","undefined","context","particle","radius","opacity","_a","_b","_c","shapeData","textData","textParticle","text","itemFromArray","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","pos","x","y","globalAlpha","fillText","strokeText"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = exports.validTypes = void 0;\nconst Utils_1 = require(\"../../Utils\");\nexports.validTypes = [\"text\", \"character\", \"char\"];\nclass TextDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (exports.validTypes.find((t) => (0, Utils_1.isInArray)(t, options.particles.shape.type))) {\n            const shapeOptions = exports.validTypes.map((t) => options.particles.shape.options[t]).find((t) => !!t);\n            if (shapeOptions instanceof Array) {\n                const promises = [];\n                for (const character of shapeOptions) {\n                    promises.push((0, Utils_1.loadFont)(character));\n                }\n                await Promise.allSettled(promises);\n            }\n            else {\n                if (shapeOptions !== undefined) {\n                    await (0, Utils_1.loadFont)(shapeOptions);\n                }\n            }\n        }\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? (0, Utils_1.itemFromArray)(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n        const weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n        const size = Math.round(radius) * 2;\n        const font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n}\nexports.TextDrawer = TextDrawer;\n"]},"metadata":{},"sourceType":"script"}