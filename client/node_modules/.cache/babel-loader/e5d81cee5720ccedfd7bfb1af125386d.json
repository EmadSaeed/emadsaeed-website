{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WobbleUpdater = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nfunction updateWobble(particle, delta) {\n  var _a;\n\n  var wobble = particle.options.wobble;\n\n  if (!wobble.enable || !particle.wobble) {\n    return;\n  }\n\n  var speed = particle.wobble.speed * delta.factor;\n  var distance = ((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor / (1000 / 60);\n  var max = 2 * Math.PI;\n  particle.wobble.angle += speed;\n\n  if (particle.wobble.angle > max) {\n    particle.wobble.angle -= max;\n  }\n\n  particle.position.x += distance * Math.cos(particle.wobble.angle);\n  particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\n\nvar WobbleUpdater = /*#__PURE__*/function () {\n  function WobbleUpdater(container) {\n    _classCallCheck(this, WobbleUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(WobbleUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var wobbleOpt = particle.options.wobble;\n\n      if (wobbleOpt.enable) {\n        particle.wobble = {\n          angle: Math.random() * Math.PI * 2,\n          speed: (0, Utils_1.getRangeValue)(wobbleOpt.speed) / 360\n        };\n      } else {\n        particle.wobble = {\n          angle: 0,\n          speed: 0\n        };\n      }\n\n      particle.retina.wobbleDistance = (0, Utils_1.getRangeValue)(wobbleOpt.distance) * this.container.retina.pixelRatio;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && !particle.spawning && particle.options.wobble.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateWobble(particle, delta);\n    }\n  }]);\n\n  return WobbleUpdater;\n}();\n\nexports.WobbleUpdater = WobbleUpdater;","map":{"version":3,"sources":["/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/tsparticles/Updaters/Wobble/WobbleUpdater.js"],"names":["Object","defineProperty","exports","value","WobbleUpdater","Utils_1","require","updateWobble","particle","delta","_a","wobble","options","enable","speed","factor","distance","retina","wobbleDistance","max","Math","PI","angle","position","x","cos","y","abs","sin","container","wobbleOpt","random","getRangeValue","pixelRatio","destroyed","spawning","isEnabled"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WobbleUpdater = void 0;\nconst Utils_1 = require(\"../../Utils\");\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!wobble.enable || !particle.wobble) {\n        return;\n    }\n    const speed = particle.wobble.speed * delta.factor;\n    const distance = (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor) / (1000 / 60);\n    const max = 2 * Math.PI;\n    particle.wobble.angle += speed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nclass WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt.enable) {\n            particle.wobble = {\n                angle: Math.random() * Math.PI * 2,\n                speed: (0, Utils_1.getRangeValue)(wobbleOpt.speed) / 360,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                speed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = (0, Utils_1.getRangeValue)(wobbleOpt.distance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && particle.options.wobble.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\nexports.WobbleUpdater = WobbleUpdater;\n"]},"metadata":{},"sourceType":"script"}