{"ast":null,"code":"var _jsxFileName = \"/Users/emad/Desktop/emadsaeed.com/client/src/components/pages/contact/Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./contact.css\";\nimport { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { Paper, TextField, Grid, Button, Alert, Stack } from '@mui/material';\nimport Particles from 'react-particles-js';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  const emptyForm = {\n    organisation: \"\",\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\"\n  };\n  const [formData, setFormData] = useState(emptyForm);\n  const [errors, setErrors] = useState({});\n  const [successAlertDisplay, setSuccessAlertDisplay] = useState(true);\n  const [errorAlertDisplay, setErrorAlertDisplay] = useState(true);\n  console.log(\"formData\", formData);\n\n  const validate = () => {\n    let errorMessage = {};\n    errorMessage.name = formData.name ? \"\" : \"This field is required\";\n    errorMessage.email = formData.email && /$^|.+@.+..+/.test(formData.email) ? \"\" : \"Email is not valid\";\n    errorMessage.subject = formData.subject ? \"\" : \"This field is required.\";\n    errorMessage.message = formData.message ? \"\" : \"This field is required.\";\n    setErrors({ ...errorMessage\n    });\n    return Object.values(errorMessage).every(x => x === \"\");\n  };\n\n  const sendEmail = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      emailjs.sendForm('service_ffha22h', 'template_6vrqko1', e.target, 'user_UmCnxjrcVmtVHD4Gbf63X').then(result => {\n        console.log(result.text);\n        setSuccessAlertDisplay(false);\n      }, error => {\n        console.log(error.text);\n        setErrorAlertDisplay(false);\n      }).then(setFormData(emptyForm));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        width: '100%'\n      },\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        style: {\n          display: successAlertDisplay ? 'none' : 'block'\n        },\n        children: \"Thank you for contacting me. I will come back to you soon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        style: {\n          display: errorAlertDisplay ? 'none' : 'block'\n        },\n        children: \"There is an error with submitting the form!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"contactMe\",\n      children: \"Contact me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"contactParagraph\",\n      children: [\"For any inquiries. Please, don't hesitate to use the form below.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this), \"Alternatively, please, drop me an email at\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"mailto:hello@emadsaeed.com\",\n      className: \"hello_1\",\n      children: \"hello@emadsaeed.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          md: 8,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 12,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"contactForm\",\n              noValidate: true,\n              autoComplete: \"off\",\n              onSubmit: sendEmail,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"new\",\n                variant: \"outlined\",\n                label: \"Organisation\",\n                name: \"organisation\",\n                value: formData.organisation,\n                onChange: e => setFormData({ ...formData,\n                  organisation: e.target.value\n                }),\n                inputProps: {\n                  maxLength: 100\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                autoComplete: \"new\",\n                variant: \"outlined\",\n                label: \"Name\",\n                name: \"name\",\n                value: formData.name,\n                onChange: e => setFormData({ ...formData,\n                  name: e.target.value\n                }),\n                error: errors.name ? true : false,\n                helperText: errors.name,\n                inputProps: {\n                  maxLength: 100\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                autoComplete: \"new\",\n                variant: \"outlined\",\n                label: \"E-mail\",\n                name: \"email\",\n                value: formData.email,\n                onChange: e => setFormData({ ...formData,\n                  email: e.target.value\n                }),\n                error: errors.email ? true : false,\n                helperText: errors.email,\n                inputProps: {\n                  maxLength: 100\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                autoComplete: \"new\",\n                variant: \"outlined\",\n                label: \"Subject\",\n                name: \"subject\",\n                value: formData.subject,\n                onChange: e => setFormData({ ...formData,\n                  subject: e.target.value\n                }),\n                error: errors.subject ? true : false,\n                helperText: errors.subject,\n                inputProps: {\n                  maxLength: 100\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                autoComplete: \"new\",\n                id: \"outlined-multiline-flexible\",\n                multiline: true,\n                rows: 4,\n                label: \"Message\",\n                name: \"message\",\n                value: formData.message,\n                onChange: e => setFormData({ ...formData,\n                  message: e.target.value\n                }),\n                error: errors.message ? true : false,\n                helperText: errors.message,\n                inputProps: {\n                  maxLength: 100\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                className: \"contactSubmitButton\",\n                children: [\"SEND \", /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 112\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Particles, {\n      className: \"contactParticles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contact, \"1v0YQpCp43Pc0CEphicnKCGysPs=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/emad/Desktop/emadsaeed.com/client/src/components/pages/contact/Contact.jsx"],"names":["useState","emailjs","Paper","TextField","Grid","Button","Alert","Stack","Particles","SendIcon","Contact","emptyForm","organisation","name","email","subject","message","formData","setFormData","errors","setErrors","successAlertDisplay","setSuccessAlertDisplay","errorAlertDisplay","setErrorAlertDisplay","console","log","validate","errorMessage","test","Object","values","every","x","sendEmail","e","preventDefault","sendForm","target","then","result","text","error","width","display","value","maxLength"],"mappings":"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","sourcesContent":["import \"./contact.css\"\nimport { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { Paper, TextField, Grid, Button, Alert, Stack } from '@mui/material';\nimport Particles from 'react-particles-js';\nimport SendIcon from '@mui/icons-material/Send';\nfunction Contact() {\n    const emptyForm = { organisation: \"\", name: \"\", email: \"\", subject: \"\", message: \"\" };\n    const [formData, setFormData] = useState(emptyForm);\n    const [errors, setErrors] = useState({});\n    const [successAlertDisplay, setSuccessAlertDisplay] = useState(true);\n    const [errorAlertDisplay, setErrorAlertDisplay] = useState(true);\n\n    console.log(\"formData\", formData);\n    const validate = () => {\n        let errorMessage = {};\n        errorMessage.name = formData.name ? \"\" : \"This field is required\"\n        errorMessage.email = formData.email && (/$^|.+@.+..+/).test(formData.email) ? \"\" : \"Email is not valid\"\n        errorMessage.subject = formData.subject ? \"\" : \"This field is required.\"\n        errorMessage.message = formData.message ? \"\" : \"This field is required.\"\n\n        setErrors({\n            ...errorMessage\n        })\n        return Object.values(errorMessage).every(x => x === \"\")\n    }\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n\n        if (validate()) {\n            emailjs.sendForm('service_ffha22h', 'template_6vrqko1', e.target, 'user_UmCnxjrcVmtVHD4Gbf63X')\n                .then((result) => {\n                    console.log(result.text);\n                    setSuccessAlertDisplay(false);\n                }, (error) => {\n                    console.log(error.text);\n                    setErrorAlertDisplay(false);\n                }).then(setFormData(emptyForm));\n        }\n    }\n\n    return (\n        <div className=\"contact\" id=\"contact\">\n            <Stack sx={{ width: '100%' }} spacing={2}>\n                <Alert severity=\"success\" style={{ display: successAlertDisplay ? 'none' : 'block' }}>Thank you for contacting me. I will come back to you soon!</Alert>\n                <Alert severity=\"error\" style={{ display: errorAlertDisplay ? 'none' : 'block' }}>There is an error with submitting the form!</Alert>\n            </Stack>\n            <h1 className=\"contactMe\">Contact me </h1>\n            <h3 className=\"contactParagraph\">For any inquiries.\n                Please, don't hesitate to use the form below.\n                <br /><br />Alternatively, please, drop me an email at\n            </h3>\n            <a href=\"mailto:hello@emadsaeed.com\" className=\"hello_1\">hello@emadsaeed.com</a>\n\n            <div className=\"formContainer\">\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\" mt={2}>\n                    <Grid item xs={10} md={8} lg={6}>\n                        <Paper elevation={12} >\n                            <form className=\"contactForm\" noValidate autoComplete=\"off\" onSubmit={sendEmail}>\n                                <TextField\n                                    autoComplete=\"new\"\n                                    variant=\"outlined\"\n                                    label=\"Organisation\"\n                                    name=\"organisation\"\n                                    value={formData.organisation}\n                                    onChange={(e) => setFormData({ ...formData, organisation: e.target.value })}\n                                    inputProps={{\n                                        maxLength: 100\n                                    }}\n                                />\n                                <TextField required\n                                    autoComplete=\"new\"\n                                    variant=\"outlined\"\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    value={formData.name}\n                                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                                    error={errors.name ? true : false}\n                                    helperText={errors.name}\n                                    inputProps={{\n                                        maxLength: 100\n                                    }}\n                                />\n                                <TextField required\n                                    autoComplete=\"new\"\n                                    variant=\"outlined\"\n                                    label=\"E-mail\"\n                                    name=\"email\"\n                                    value={formData.email}\n                                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                                    error={errors.email ? true : false}\n                                    helperText={errors.email}\n                                    inputProps={{\n                                        maxLength: 100\n                                    }}\n                                />\n                                <TextField required\n                                    autoComplete=\"new\"\n                                    variant=\"outlined\"\n                                    label=\"Subject\"\n                                    name=\"subject\"\n                                    value={formData.subject}\n                                    onChange={(e) => setFormData({ ...formData, subject: e.target.value })}\n                                    error={errors.subject ? true : false}\n                                    helperText={errors.subject}\n                                    inputProps={{\n                                        maxLength: 100\n                                    }}\n                                />\n                                <TextField required\n                                    autoComplete=\"new\"\n                                    id=\"outlined-multiline-flexible\"\n                                    multiline\n                                    rows={4}\n                                    label=\"Message\"\n                                    name=\"message\"\n                                    value={formData.message}\n                                    onChange={(e) => setFormData({ ...formData, message: e.target.value })}\n                                    error={errors.message ? true : false}\n                                    helperText={errors.message}\n                                    inputProps={{\n                                        maxLength: 100\n                                    }}\n                                />\n                                <Button type=\"submit\" variant=\"contained\" className=\"contactSubmitButton\">SEND <SendIcon /></Button>\n                            </form>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n            <Particles className=\"contactParticles\" />\n        </div>\n    )\n}\n\nexport default Contact\n"]},"metadata":{},"sourceType":"module"}