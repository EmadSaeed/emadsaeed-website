{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vector = void 0;\n\nvar Vector = /*#__PURE__*/function () {\n  function Vector(x, y) {\n    _classCallCheck(this, Vector);\n\n    var defX, defY;\n\n    if (y === undefined) {\n      if (typeof x === \"number\") {\n        throw new Error(\"tsParticles - Vector not initialized correctly\");\n      }\n\n      var coords = x;\n      var _ref = [coords.x, coords.y];\n      defX = _ref[0];\n      defY = _ref[1];\n    } else {\n      defX = x;\n      defY = y;\n    }\n\n    this.x = defX;\n    this.y = defY;\n  }\n\n  _createClass(Vector, [{\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      return Vector.create(this.x + v.x, this.y + v.y);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector.create(this.x - v.x, this.y - v.y);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector.create(this.x * n, this.y * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector.create(this.x / n, this.y / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector.clone(this);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(velocity) {\n      this.x = velocity.x;\n      this.y = velocity.y;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector.create(source.x, source.y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y) {\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return Vector.create(0, 0);\n    }\n  }]);\n\n  return Vector;\n}();\n\nexports.Vector = Vector;","map":{"version":3,"sources":["/Users/emad/Desktop/My Website 2022/emadsaeed.com/client/node_modules/tsparticles/Core/Particle/Vector.js"],"names":["Object","defineProperty","exports","value","Vector","x","y","defX","defY","undefined","Error","coords","Math","atan2","angle","updateFromAngle","length","sqrt","v","create","n","sub","getLengthSq","abs","clone","velocity","cos","sin","source"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector = void 0;\nclass Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\nexports.Vector = Vector;\n"]},"metadata":{},"sourceType":"script"}